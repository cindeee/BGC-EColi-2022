<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="#"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:dt="urn:schemas-microsoft-com:datatypes" xmlns:ps="http://graphpad.com/prism/Prism.htm" version="1.0">
	<!--
	XML style sheet template for formatting data and info tables from GraphPad Prism 8.0.
	Copyright 1992-2022 GraphPad Software, LLC
-->
	<xsl:output method="html" version="4.0" omit-xml-declaration="yes"/>
	<GraphPadPrismFile xmlns="http://graphpad.com/prism/Prism.htm" PrismXMLVersion="5.00">
<Created>
<MostRecentVersion CreatedByProgram="GraphPad Prism" CreatedByVersion="9.4.1.681" Login="Cindy" DateTime="2022-11-20T21:59:39+00:00"/>
</Created>
<InfoSequence>
<Ref ID="Info0" Selected="1"/>
</InfoSequence>
<Info ID="Info0">
<Title>Project info 1</Title>
<Notes/>
<Constant><Name>Experiment Date</Name><Value>2022-11-09</Value></Constant>
<Constant><Name>Experiment ID</Name><Value/></Constant>
<Constant><Name>Notebook ID</Name><Value/></Constant>
<Constant><Name>Project</Name><Value/></Constant>
<Constant><Name>Experimenter</Name><Value/></Constant>
<Constant><Name>Protocol</Name><Value/></Constant>
</Info>

<TableSequence Selected="1">
<Ref ID="Table0" Selected="1"/>
<Ref ID="Table4"/>
</TableSequence>
<Table ID="Table0" XFormat="none" TableType="OneWay" EVFormat="AsteriskAfterNumber">
<Title>Data 1</Title>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>taurine(HC)</Title>
<Subcolumn>
<d>0.196689</d>
<d>-0.39903</d>
<d>-0.53063</d>
<d>-0.37631</d>
<d>-0.41419</d>
<d>-0.56932</d>
<d>-0.36644</d>
<d>-0.31356</d>
<d>-0.43663</d>
<d>-0.29647</d>
<d>-0.14229</d>
<d>-0.32586</d>
<d>-0.14568</d>
<d>-0.36132</d>
<d>-0.37676</d>
<d>-0.2923</d>
<d>-0.38499</d>
<d>-0.3288</d>
<d>-0.33429</d>
<d>0.357778</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Taurine(UC)</Title>
<Subcolumn>
<d>0.107099</d>
<d>3.180866</d>
<d>-0.37557</d>
<d>-0.156</d>
<d>3.133456</d>
<d>-0.35356</d>
<d>0.185546</d>
<d>3.485551</d>
<d>-0.43494</d>
<d>2.992675</d>
<d>-0.37357</d>
<d>-0.29557</d>
<d>-0.09376</d>
<d>-0.46515</d>
<d>-0.04871</d>
<d>0.681738</d>
<d>2.48624</d>
<d>0.010327</d>
<d>-0.3268</d>
<d>-0.37249</d>
<d>-0.4025</d>
<d>-0.36955</d>
<d>1.22425</d>
<d>0.147789</d>
<d>2.261068</d>
<d>-0.36844</d>
<d>2.838743</d>
<d>3.276234</d>
<d>-0.3649</d>
<d>1.349535</d>
<d>2.354003</d>
<d>-0.47135</d>
<d>0.692893</d>
<d>-0.10492</d>
<d>0.056656</d>
<d>1.640701</d>
<d>-0.00154</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>taruine(DC)</Title>
<Subcolumn>
<d>0.314671</d>
<d>-0.11773</d>
<d>0.797251</d>
<d>1.76149</d>
<d>-0.26026</d>
<d>-0.3453</d>
<d>0.735344</d>
<d>-0.34442</d>
<d>0.757193</d>
<d>-0.42133</d>
<d>-0.24079</d>
<d>-0.60598</d>
<d>-0.1405</d>
<d>0.771699</d>
<d>-0.21725</d>
<d>-0.36044</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>taurine(CD)</Title>
<Subcolumn>
<d>0.571174</d>
<d>-0.36274</d>
<d>-0.26013</d>
<d>-0.38683</d>
<d>0.176083</d>
<d>-0.41099</d>
<d>0.639413</d>
<d>-0.36915</d>
<d>0.700867</d>
<d>-0.07856</d>
<d>0.119344</d>
<d>-0.41195</d>
<d>0.033843</d>
<d>0.778934</d>
<d>0.338398</d>
<d>-0.44754</d>
<d>-0.38055</d>
<d>-0.46353</d>
<d>-0.20965</d>
<d>-0.01356</d>
<d>-0.32239</d>
</Subcolumn>
</YColumn>
<YColumn Width="151" Decimals="6" Subcolumns="1">
<Title>N1.N12-Diacetylspermine</Title>
<Subcolumn>
<d>-0.05203</d>
<d>2.00656</d>
<d>0.353177</d>
<d>-0.27979</d>
<d>0.097863</d>
<d>-0.27439</d>
<d>0.638216</d>
<d>0.64481</d>
<d>-0.37735</d>
<d>0.516879</d>
<d>-0.31811</d>
<d>-0.36292</d>
<d>0.558498</d>
<d>1.46046</d>
<d>1.341867</d>
<d>0.42667</d>
<d>1.377439</d>
<d>3.453189</d>
<d>0.139629</d>
<d>0.8452</d>
<d>0.326642</d>
<d>-0.30505</d>
<d>1.386214</d>
<d>4.111248</d>
<d>0.648463</d>
<d>-0.3499</d>
<d>0.130186</d>
<d>-0.332</d>
<d>-0.33208</d>
<d>-0.35288</d>
<d>0.024618</d>
<d>-0.18667</d>
<d>3.532762</d>
<d>-0.29532</d>
<d>-0.0992</d>
<d>2.2709</d>
<d>-0.37779</d>
</Subcolumn>
</YColumn>
<YColumn Width="82" Decimals="6" Subcolumns="1">
<Title>Succinic.acid</Title>
<Subcolumn>
<d>-0.08517</d>
<d>4.81077</d>
<d>0.250866</d>
<d>1.308945</d>
<d>0.539971</d>
<d>0.401235</d>
<d>0.229946</d>
<d>3.71541</d>
<d>-0.14646</d>
<d>0.932593</d>
<d>0.274917</d>
<d>0.135363</d>
<d>0.94305</d>
<d>4.211149</d>
<d>1.196263</d>
<d>2.432024</d>
<d>-0.33873</d>
<d>2.975553</d>
<d>1.110672</d>
<d>0.797646</d>
<d>-0.20322</d>
<d>0.07726</d>
<d>0.99151</d>
<d>2.647444</d>
<d>1.086257</d>
<d>0.230108</d>
<d>3.649391</d>
<d>2.181662</d>
<d>0.277227</d>
<d>0.693781</d>
<d>-0.14736</d>
<d>0.467323</d>
<d>0.556669</d>
<d>0.218878</d>
<d>0.157132</d>
<d>2.775215</d>
<d>-0.17583</d>
</Subcolumn>
</YColumn>
<YColumn Width="188" Decimals="6" Subcolumns="1">
<Title>Dehydroepiandrosterone.Sulfate</Title>
<Subcolumn>
<d>-0.11995</d>
<d>-0.32863</d>
<d>-0.39507</d>
<d>-0.44898</d>
<d>-0.27802</d>
<d>0.132926</d>
<d>0.664432</d>
<d>-0.33668</d>
<d>-0.42951</d>
<d>-0.15941</d>
<d>-0.40951</d>
<d>-0.22306</d>
<d>1.024672</d>
<d>1.549909</d>
<d>0.255579</d>
<d>-0.05638</d>
<d>2.189493</d>
<d>0.016624</d>
<d>-0.33529</d>
<d>0.762677</d>
<d>-0.13653</d>
<d>-0.27998</d>
<d>0.769708</d>
<d>0.914161</d>
<d>0.104358</d>
<d>-0.38101</d>
<d>-0.44239</d>
<d>-0.29443</d>
<d>-0.37993</d>
<d>0.099162</d>
<d>1.089799</d>
<d>-0.45105</d>
<d>1.140367</d>
<d>-0.37768</d>
<d>-0.22648</d>
<d>0.300004</d>
<d>-0.47262</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Tryptophan</Title>
<Subcolumn>
<d>0.261297</d>
<d>2.780891</d>
<d>-0.16556</d>
<d>2.195612</d>
<d>1.718535</d>
<d>0.231255</d>
<d>0.599873</d>
<d>6.606429</d>
<d>-0.29193</d>
<d>5.324757</d>
<d>0.208699</d>
<d>0.182777</d>
<d>0.098599</d>
<d>5.712565</d>
<d>0.409174</d>
<d>0.854499</d>
<d>2.289506</d>
<d>0.985241</d>
<d>0.197187</d>
<d>2.106948</d>
<d>0.367397</d>
<d>0.779948</d>
<d>0.055861</d>
<d>0.85601</d>
<d>4.524679</d>
<d>-0.04449</d>
<d>1.813979</d>
<d>2.391478</d>
<d>0.110584</d>
<d>1.637378</d>
<d>2.346611</d>
<d>0.153923</d>
<d>0.869622</d>
<d>1.798491</d>
<d>1.084967</d>
<d>5.382687</d>
<d>0.297432</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Glycylproline</Title>
<Subcolumn>
<d>-0.16881</d>
<d>-0.14815</d>
<d>-0.39188</d>
<d>-0.36501</d>
<d>-0.37985</d>
<d>-0.36723</d>
<d>-0.35493</d>
<d>-0.38013</d>
<d>-0.35201</d>
<d>-0.31324</d>
<d>-0.37821</d>
<d>-0.3727</d>
<d>-0.23708</d>
<d>-0.32058</d>
<d>-0.37982</d>
<d>-0.27539</d>
<d>-0.3512</d>
<d>-0.38539</d>
<d>-0.30973</d>
<d>-0.40023</d>
<d>-0.40627</d>
<d>-0.40128</d>
<d>-0.4473</d>
<d>-0.33702</d>
<d>-0.47599</d>
<d>-0.35873</d>
<d>-0.46644</d>
<d>-0.42361</d>
<d>-0.33749</d>
<d>-0.37909</d>
<d>-0.35641</d>
<d>-0.41745</d>
<d>-0.43451</d>
<d>-0.30792</d>
<d>-0.44617</d>
<d>0.084542</d>
<d>-0.45207</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Glutamine</Title>
<Subcolumn>
<d>-0.06587</d>
<d>0.745583</d>
<d>-0.21894</d>
<d>-0.30791</d>
<d>-0.23227</d>
<d>-0.3407</d>
<d>-0.30455</d>
<d>-0.28941</d>
<d>-0.26581</d>
<d>-0.17695</d>
<d>-0.39954</d>
<d>-0.34095</d>
<d>-0.21709</d>
<d>-0.35362</d>
<d>-0.39718</d>
<d>-0.23266</d>
<d>-0.17121</d>
<d>-0.31775</d>
<d>-0.19674</d>
<d>-0.32026</d>
<d>-0.37733</d>
<d>-0.22005</d>
<d>-0.39279</d>
<d>-0.21556</d>
<d>-0.37899</d>
<d>-0.33098</d>
<d>-0.43708</d>
<d>-0.33361</d>
<d>-0.34043</d>
<d>-0.37105</d>
<d>-0.34632</d>
<d>-0.42973</d>
<d>-0.36682</d>
<d>-0.32057</d>
<d>-0.4234</d>
<d>-0.13666</d>
<d>-0.40426</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Thymine</Title>
<Subcolumn>
<d>-0.10852</d>
<d>-0.4091</d>
<d>0.052122</d>
<d>-0.05377</d>
<d>0.029535</d>
<d>0.059801</d>
<d>-0.19237</d>
<d>0.023763</d>
<d>-0.14106</d>
<d>-0.37561</d>
<d>0.312669</d>
<d>0.183841</d>
<d>-0.23599</d>
<d>-0.42383</d>
<d>-0.27851</d>
<d>-0.26766</d>
<d>-0.29984</d>
<d>-0.17249</d>
<d>-0.18631</d>
<d>-0.21617</d>
<d>-0.17131</d>
<d>0.190081</d>
<d>-0.22549</d>
<d>0.051014</d>
<d>0.276143</d>
<d>0.255434</d>
<d>0.932741</d>
<d>0.829212</d>
<d>0.184686</d>
<d>0.038595</d>
<d>0.332304</d>
<d>0.353946</d>
<d>-0.19963</d>
<d>0.783584</d>
<d>-0.12841</d>
<d>-0.25725</d>
<d>0.361848</d>
</Subcolumn>
</YColumn>
<YColumn Width="135" Decimals="6" Subcolumns="1">
<Title>Glycodeoxycholic.acid</Title>
<Subcolumn>
<d>-0.17623</d>
<d>-0.40035</d>
<d>-0.28697</d>
<d>-0.37535</d>
<d>-0.35206</d>
<d>0.122976</d>
<d>0.085769</d>
<d>-0.40684</d>
<d>-0.16435</d>
<d>-0.43756</d>
<d>-0.04069</d>
<d>1.981274</d>
<d>-0.17965</d>
<d>-0.41431</d>
<d>-0.28747</d>
<d>-0.25625</d>
<d>-0.49692</d>
<d>-0.38969</d>
<d>0.104455</d>
<d>-0.50917</d>
<d>-0.2411</d>
<d>-0.33948</d>
<d>0.341611</d>
<d>-0.50667</d>
<d>-0.45596</d>
<d>0.045906</d>
<d>-0.28769</d>
<d>-0.44872</d>
<d>0.195741</d>
<d>-0.07812</d>
<d>-0.28203</d>
<d>0.03627</d>
<d>0.873123</d>
<d>-0.368</d>
<d>-0.45288</d>
<d>-0.44167</d>
<d>0.851072</d>
</Subcolumn>
</YColumn>
<YColumn Width="124" Decimals="6" Subcolumns="1">
<Title>3-Methylglutaric.acid</Title>
<Subcolumn>
<d>-0.15977</d>
<d>-0.33343</d>
<d>0.070743</d>
<d>-0.34009</d>
<d>-0.24615</d>
<d>-0.25736</d>
<d>-0.33209</d>
<d>-0.37738</d>
<d>0.308726</d>
<d>-0.4042</d>
<d>-0.03906</d>
<d>-0.16766</d>
<d>-0.22572</d>
<d>-0.43291</d>
<d>-0.35656</d>
<d>-0.2845</d>
<d>-0.47177</d>
<d>-0.30936</d>
<d>-0.24477</d>
<d>-0.32719</d>
<d>-0.18306</d>
<d>0.096868</d>
<d>-0.44261</d>
<d>-0.48206</d>
<d>-0.49982</d>
<d>0.197994</d>
<d>-0.06739</d>
<d>-0.36358</d>
<d>-0.13863</d>
<d>-0.3356</d>
<d>-0.08998</d>
<d>-0.31808</d>
<d>-0.39581</d>
<d>-0.29113</d>
<d>-0.29006</d>
<d>-0.41355</d>
<d>-0.03947</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Adipic.acid</Title>
<Subcolumn>
<d>-0.15977</d>
<d>-0.33343</d>
<d>0.070743</d>
<d>-0.34009</d>
<d>-0.24615</d>
<d>-0.25736</d>
<d>-0.33209</d>
<d>-0.37738</d>
<d>0.308726</d>
<d>-0.4042</d>
<d>-0.03906</d>
<d>-0.16766</d>
<d>-0.22572</d>
<d>-0.43291</d>
<d>-0.35656</d>
<d>-0.2845</d>
<d>-0.47177</d>
<d>-0.30936</d>
<d>-0.24477</d>
<d>-0.32719</d>
<d>-0.18306</d>
<d>0.096868</d>
<d>-0.44261</d>
<d>-0.48206</d>
<d>-0.49982</d>
<d>0.197994</d>
<d>-0.06739</d>
<d>-0.36358</d>
<d>-0.13863</d>
<d>-0.3356</d>
<d>-0.08998</d>
<d>-0.31808</d>
<d>-0.39581</d>
<d>-0.29113</d>
<d>-0.29006</d>
<d>-0.41355</d>
<d>-0.03947</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Suberic.acid</Title>
<Subcolumn>
<d>-0.10864</d>
<d>-0.15966</d>
<d>0.471532</d>
<d>-0.24207</d>
<d>-0.00949</d>
<d>0.101228</d>
<d>-0.2175</d>
<d>-0.29157</d>
<d>0.100063</d>
<d>-0.33822</d>
<d>-0.17615</d>
<d>0.157858</d>
<d>-0.19496</d>
<d>-0.35656</d>
<d>-0.30317</d>
<d>-0.24824</d>
<d>-0.38981</d>
<d>-0.36619</d>
<d>-0.19767</d>
<d>-0.37665</d>
<d>-0.17629</d>
<d>0.580428</d>
<d>-0.36506</d>
<d>-0.41691</d>
<d>-0.38128</d>
<d>0.493738</d>
<d>-0.17895</d>
<d>-0.27987</d>
<d>-0.01884</d>
<d>-0.21459</d>
<d>-0.06424</d>
<d>-0.24455</d>
<d>-0.33026</d>
<d>0.104433</d>
<d>-0.18946</d>
<d>-0.37648</d>
<d>0.346795</d>
</Subcolumn>
</YColumn>
<YColumn Width="103" Decimals="6" Subcolumns="1">
<Title>Deoxycholic.acid</Title>
<Subcolumn>
<d>-0.16562</d>
<d>-0.30071</d>
<d>0.80147</d>
<d>1.782866</d>
<d>1.948887</d>
<d>4.699707</d>
<d>8.585663</d>
<d>-0.14839</d>
<d>5.488864</d>
<d>-0.05882</d>
<d>7.698919</d>
<d>7.519119</d>
<d>0.866915</d>
<d>1.911403</d>
<d>6.735307</d>
<d>2.256155</d>
<d>0.192665</d>
<d>2.026578</d>
<d>1.878949</d>
<d>3.062578</d>
<d>4.647405</d>
<d>2.184334</d>
<d>4.606766</d>
<d>1.600401</d>
<d>0.86709</d>
<d>5.784923</d>
<d>6.87035</d>
<d>1.701583</d>
<d>9.110208</d>
<d>8.782649</d>
<d>1.606987</d>
<d>5.958452</d>
<d>5.206872</d>
<d>5.071905</d>
<d>2.410963</d>
<d>0.950241</d>
<d>7.502275</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Azelaic.Acid</Title>
<Subcolumn>
<d>0.162813</d>
<d>1.192371</d>
<d>6.736071</d>
<d>3.387172</d>
<d>1.516343</d>
<d>0.792344</d>
<d>1.180232</d>
<d>0.22204</d>
<d>2.293591</d>
<d>0.218366</d>
<d>0.487543</d>
<d>5.046278</d>
<d>0.116823</d>
<d>0.247377</d>
<d>0.295255</d>
<d>-0.00387</d>
<d>0.20356</d>
<d>0.224074</d>
<d>1.595767</d>
<d>0.269226</d>
<d>1.640417</d>
<d>5.38418</d>
<d>0.154621</d>
<d>-0.10037</d>
<d>1.021804</d>
<d>4.893632</d>
<d>1.231842</d>
<d>0.60573</d>
<d>1.683569</d>
<d>0.477945</d>
<d>0.931043</d>
<d>0.567497</d>
<d>0.30765</d>
<d>3.351785</d>
<d>2.482594</d>
<d>0.148312</d>
<d>3.823983</d>
</Subcolumn>
</YColumn>
<YColumn Width="102" Decimals="5" Subcolumns="1">
<Title>Riboflavin..vit.B2.</Title>
<Subcolumn>
<d>-0.16556</d>
<d>-0.40318</d>
<d>-0.23</d>
<d>-0.34818</d>
<d>-0.19181</d>
<d>-0.22228</d>
<d>-0.32118</d>
<d>-0.37977</d>
<d>-0.20327</d>
<d>-0.43576</d>
<d>-0.15014</d>
<d>-0.19737</d>
<d>-0.23644</d>
<d>-0.39697</d>
<d>-0.35667</d>
<d>-0.27766</d>
<d>-0.41678</d>
<d>-0.2978</d>
<d>-0.18151</d>
<d>-0.30198</d>
<d>-0.29467</d>
<d>-0.23516</d>
<d>-0.20407</d>
<d>-0.45731</d>
<d>-0.27332</d>
<d>-0.09593</d>
<d>-0.36735</d>
<d>-0.39352</d>
<d>-0.15186</d>
<d>-0.22771</d>
<d>-0.17811</d>
<d>-0.12564</d>
<d>-0.37077</d>
<d>-0.22883</d>
<d>-0.40809</d>
<d>-0.44613</d>
<d>-0.24009</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="6" Subcolumns="1">
<Title>Glutaric.acid</Title>
<Subcolumn>
<d>-0.16788</d>
<d>-0.3873</d>
<d>-0.37217</d>
<d>-0.28239</d>
<d>-0.25189</d>
<d>0.66086</d>
<d>-0.09573</d>
<d>-0.16818</d>
<d>-0.41185</d>
<d>-0.39403</d>
<d>0.567448</d>
<d>0.339405</d>
<d>-0.22387</d>
<d>-0.40288</d>
<d>-0.21917</d>
<d>-0.28247</d>
<d>-0.34703</d>
<d>-0.3177</d>
<d>0.027007</d>
<d>-0.28453</d>
<d>-0.06722</d>
<d>-0.34006</d>
<d>-0.22698</d>
<d>-0.38285</d>
<d>-0.09183</d>
<d>-0.36095</d>
<d>0.868439</d>
<d>-0.20108</d>
<d>0.367475</d>
<d>1.033696</d>
<d>-0.15797</d>
<d>0.257092</d>
<d>-0.12593</d>
<d>-0.36794</d>
<d>-0.45211</d>
<d>-0.35974</d>
<d>-0.3213</d>
</Subcolumn>
</YColumn>
<YColumn Width="138" Decimals="5" Subcolumns="1">
<Title>N-alpha-Acetyl-L-lysine</Title>
<Subcolumn>
<d>-0.16537</d>
<d>-0.41242</d>
<d>-0.07524</d>
<d>-0.35077</d>
<d>-0.33603</d>
<d>-0.25572</d>
<d>-0.25187</d>
<d>-0.32625</d>
<d>-0.31672</d>
<d>-0.43799</d>
<d>-0.24796</d>
<d>-0.12915</d>
<d>-0.23088</d>
<d>-0.41803</d>
<d>-0.38788</d>
<d>-0.26919</d>
<d>-0.43638</d>
<d>-0.27471</d>
<d>-0.22646</d>
<d>-0.30961</d>
<d>-0.36863</d>
<d>-0.23091</d>
<d>-0.41251</d>
<d>-0.45787</d>
<d>-0.4747</d>
<d>-0.1012</d>
<d>-0.29967</d>
<d>-0.34366</d>
<d>-0.06096</d>
<d>-0.25473</d>
<d>-0.18974</d>
<d>-0.4512</d>
<d>-0.40326</d>
<d>-0.19395</d>
<d>-0.45162</d>
<d>-0.42989</d>
<d>-0.14686</d>
</Subcolumn>
</YColumn>
<YColumn Width="126" Decimals="6" Subcolumns="1">
<Title>1.7-Dimethyluric.acid</Title>
<Subcolumn>
<d>-0.03994</d>
<d>-0.40903</d>
<d>-0.42023</d>
<d>0.009017</d>
<d>-0.19524</d>
<d>-0.3605</d>
<d>0.062309</d>
<d>-0.25993</d>
<d>-0.43111</d>
<d>-0.19801</d>
<d>3.525646</d>
<d>-0.37137</d>
<d>-0.20904</d>
<d>-0.3736</d>
<d>-0.20646</d>
<d>-0.2445</d>
<d>0.513954</d>
<d>0.628279</d>
<d>0.204495</d>
<d>1.034027</d>
<d>1.536342</d>
<d>-0.41724</d>
<d>-0.32559</d>
<d>-0.36129</d>
<d>-0.51459</d>
<d>-0.37952</d>
<d>-0.48527</d>
<d>-0.40616</d>
<d>1.851284</d>
<d>0.596369</d>
<d>-0.51108</d>
<d>1.736187</d>
<d>1.459794</d>
<d>-0.42818</d>
<d>-0.00781</d>
<d>-0.37121</d>
<d>-0.42863</d>
</Subcolumn>
</YColumn>
</Table>
<Table ID="Table4" XFormat="none" TableType="OneWay" EVFormat="AsteriskAfterNumber">
<Title>B12</Title>
<YColumn Width="88" Decimals="5" Subcolumns="1">
<Title>UC</Title>
<Subcolumn>
<d>11113.5011</d>
<d>2698.47189</d>
<d>19753.3454</d>
<d>49423.0012</d>
<d>37071.9648</d>
<d>105300.499</d>
<d>52550.2444</d>
<d>18315.0527</d>
<d>102565.453</d>
<d>11699.139</d>
<d>208829.464</d>
<d>194648.005</d>
<d>13772.9048</d>
<d>47036.8483</d>
<d>37839.0405</d>
<d>24629.7989</d>
<d>68946.6401</d>
<d>129634.753</d>
<d>96964.9273</d>
<d>161337.332</d>
<d>83396.5877</d>
<d>64069.9141</d>
<d>284650.054</d>
<d>57470.7375</d>
<d>198755.974</d>
<d>250015.637</d>
<d>58077.4915</d>
<d>52150.1884</d>
<d>189082.256</d>
<d>212014.408</d>
<d>124689.154</d>
<d>196840.403</d>
<d>110466.427</d>
<d>113750.507</d>
<d>55052.4844</d>
<d>23462.7192</d>
<d>194181.439</d>
</Subcolumn>
</YColumn>
<YColumn Width="81" Decimals="4" Subcolumns="1">
<Title>HC</Title>
<Subcolumn>
<d>158967.167</d>
<d>114884.379</d>
<d>208233.686</d>
<d>101164.153</d>
<d>78331.2239</d>
<d>318780.859</d>
<d>128136.129</d>
<d>59794.3676</d>
<d>268863.706</d>
<d>303854.737</d>
<d>125504.835</d>
<d>64195.6209</d>
<d>74376.0982</d>
<d>158660.291</d>
<d>135004.819</d>
<d>189907.259</d>
<d>143013.096</d>
<d>128810.849</d>
<d>100675.502</d>
<d>160186.667</d>
</Subcolumn>
</YColumn>
</Table>

<!--Analyses, graphs and layouts as compressed binary. Don't edit this part of the file.-->

<Template dt:dt="bin.base64">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
T7cYbVOtza9BpfOJBhlzTggQje5/B8ZzT80TL81f/8XWYa/+ftJ46DssGjoVrdH4oqGLnWjo
GkdrhBQN6t/MRMOM3jW0tpN+2hHDILvYTxNsO2ow0Sgzitqhxgptyb3+fQ2xx8qB1gTna1W4
s3rS+xH7vDpF6aEh3A3VpzML/eGVRqydcX/4cvyMSX+Y2GyDPucRHLSjf866sJ+z7hQ8ZxZt
Mm80LeUfN+827zRN55eZD5sPmkbxpVjsUxn6nF0RPGcmxIwZqebAcR/DxwpOttdyovtarj7P
GQXIf8eAuk96Eop3E77rE1Bv4U671op1yTLsd5lQ8/WlIc6qive918XFoUa6spfwwlScjZhM
pybraUhxXZON/aUpU7wwVTmFDrKywnKFc/Dfs+qVu3K8oXL3BXM7ZxVvjP/c7HZezO9zHjNP
dg7j33Eqcjc3otzNrStvePzY3Dj+GzjZ3ucU3fc565u7TAxytyUr5i7PkvXiA3OXkXJ3Cczd
mWUllaXl/rlrFXJ3b0rD5K4cb6jc/Vt/reVHQ631TMM6y5uGz6wDDK9YNhhes8q5q6+JJHf1
e//GCSHzZ4l9rQWhHw2yTdzPxPZn1F6H3d9U2MR9ALZfo/Yr2H2Dwn7NGix3WV/uLtHVN3cH
U9md7JPd/vRKMXfZILI7ZUJhRZEnmX4IbgiSu0YhZacij+ehzbV7mVnMKvRl7RZmGPMM+rV2
NUOm9KbraB6vDT+P03X6tXvxyWbsT+xZDGkrifZ8JLpvwedfUnsY6T8i2Sbuq/H5r9Qm6XgG
yfavwu+r5bHOl8c38fXN4+9q5baemMe3gjzWCXlsQqwij8n7/ClpYWYySVrjZzJW/CY715Wr
ts02TeL2mCf7bBIqsLGjrCjVMrlxDLnTMoUAh9uo/LjKfwRcOZdOavx8IhQQ4jIb56D4JMQf
lX324BLwAP0hBvh0xj6TqA9LNh9yScXm4wZsSlWblprXmku5103rzUvMo7nPTa+ai8x9OUUu
usMXVRK6Gt/7UtIsMst2KY6PuBP7dWyvx25LzLI9mroT+3Nsv4rdisyy3Ze69/Vl0U1+b0z0
MVC2pMkNRRUBZasXRJUF1TG5LjMzWSg/Un9XKaXBJfOsFXKcoIp3kCp+36qn8P9kR/B4vz+B
05VTX/kWrw8l3/uMG2xP8Qviepp+txXy6T4b3wUbKN/GOuSbbZQPW3gV+WYjkm9jWPLdE5dF
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</Template></GraphPadPrismFile>
	<xsl:template match="ps:Info">
		<a><xsl:attribute name="name"><xsl:value-of select="@ID"/></xsl:attribute></a>
		<table border="0">
			<tr>
				<td><xsl:apply-templates select="ps:Title"/> </td><td width="20"></td><td width="50%"><b>Notes</b></td>
			</tr>
			<tr>
				<td valign="top">
					<table BORDER="1" CELLSPACING="0">
						<tr><th>Constant</th><th>Name</th></tr>
						<xsl:for-each select="ps:Constant">
							<tr>
								<td><xsl:apply-templates select="ps:Name"/> </td>
								<td><xsl:apply-templates select="ps:Value"/> </td>
							</tr>
						</xsl:for-each>
					</table>
				</td>
				<td></td>
				<td valign="top">
					<xsl:apply-templates select="ps:Notes"/>
				</td>
			</tr>
		</table>
	</xsl:template>
	<xsl:template match="ps:GraphPadPrismFile">
		<HTML>
			<BODY>
				<xsl:variable name="Chars" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
				<font color="#999999">
					<p align="center">This file can be opened by <a href="http://www.graphpad.com">GraphPad</a> Prism (version 
	<xsl:value-of select="@PrismXMLVersion"/> or later). </p></font><hr/>
         This file contains <xsl:value-of select="count(ps:Table|ps:HugeTable|ps:Table1024)"/> data tables and 
	<xsl:value-of select="count(ps:Info)+count(ps:Table|ps:HugeTable|ps:Table1024/ps:Info)"/> info tables:

	<dir>
					<xsl:for-each select="ps:Info">
						<li>
							<a>
								<xsl:attribute name="href">#<xsl:value-of select="@ID"/></xsl:attribute>
								<xsl:apply-templates select="ps:Title"/>
							</a>
						</li>
					</xsl:for-each>
					<xsl:for-each select="ps:Table|ps:HugeTable|ps:Table1024">
						<li>
							<a>
								<xsl:attribute name="href">#<xsl:value-of select="@ID"/></xsl:attribute>
								<xsl:apply-templates select="ps:Title"/>
							</a>
							<dir>
								<xsl:for-each select="ps:Info">
									<li>
										<a>
											<xsl:attribute name="href">#<xsl:value-of select="@ID"/></xsl:attribute>
											<xsl:apply-templates select="ps:Title"/>
										</a>
									</li>
								</xsl:for-each>
							</dir>
						</li>
					</xsl:for-each>
				</dir>
				<hr/>
				<xsl:apply-templates select="ps:Info"/>
				<br/>
				<hr/>
				<br/>
				<xsl:for-each select="ps:Table|ps:HugeTable|ps:Table1024">
					<xsl:apply-templates select="ps:Title"/>
					<a><xsl:attribute name="name"><xsl:value-of select="@ID"/></xsl:attribute></a>
					<xsl:variable name="width" select="100 div count (*/ps:Subcolumn)"/>
					<xsl:variable name="xFormat" select="./@XFormat"/>
					<xsl:variable name="yFormat" select="./@YFormat"/>
					<xsl:variable name="nRepl" select="./@replicates"/>
					<xsl:variable name="isXAdvancedColumn" select="boolean(($xFormat='date' or $xFormat='time' or $xFormat='startenddate') and count(ps:XAdvancedColumn) &gt; 0)"/>
					<xsl:variable name="isXAdvancedSubcol" select="boolean(($xFormat='startenddate') or count(ps:XAdvancedColumn/ps:Subcolumn/ps:Title) &gt; 0)"/>
					<xsl:variable name="isXSubcol" select="boolean(($xFormat='error' or count(ps:XColumn/ps:Subcolumn/ps:Title) &gt; 0) and not ($isXAdvancedColumn))"/>
					<xsl:variable name="isYSubcol" select="boolean(($yFormat='replicates'and ./@Replicates&gt;1) or &#xA;						 ($yFormat!='text'and $yFormat!='replicates') or &#xA;						count(ps:YColumn/ps:Subcolumn/ps:Title)&gt;0)"/>
					<xsl:variable name="isYSubColNameCustom" select="boolean($isYSubcol and count(ps:SubColumnTitles)&gt;0)"/>
					<TABLE BORDER="1" CELLSPACING="0">
						<TR>
							<xsl:for-each select="ps:RowTitlesColumn">
								<TD align="center">
									<xsl:attribute name="rowspan">
										<xsl:if test="$isXSubcol or $isXAdvancedSubcol or $isYSubcol">2</xsl:if>
									</xsl:attribute><BR/>
								</TD>
							</xsl:for-each>
							<xsl:if test="not ($isXAdvancedColumn)">
								<xsl:for-each select="ps:XColumn">
									<TD align="center">
										<xsl:attribute name="rowspan">
											<xsl:if test="$isYSubcol and not($isXSubcol)">2</xsl:if>
										</xsl:attribute>
										<xsl:attribute name="colspan"><xsl:value-of select="./@Subcolumns"/></xsl:attribute>
						 
						<xsl:apply-templates select="ps:Title"/>
										<xsl:if test="count(ps:Title)=0 or ps:Title=''">X-Title</xsl:if>				
						 
					</TD>
								</xsl:for-each>
							</xsl:if>
							<xsl:if test="$isXAdvancedColumn">
								<xsl:for-each select="ps:XAdvancedColumn">
									<TD align="center">
										<xsl:attribute name="rowspan">
											<xsl:if test="$isYSubcol and not($isXAdvancedSubcol)">2</xsl:if>
										</xsl:attribute>
										<xsl:attribute name="colspan"><xsl:value-of select="./@Subcolumns"/></xsl:attribute>
						 
						<xsl:apply-templates select="ps:Title"/>
										<xsl:if test="count(ps:Title)=0 or ps:Title=''">X-Title</xsl:if>				
						 
					</TD>
								</xsl:for-each>
							</xsl:if>
							<xsl:for-each select="ps:YColumn">
								<xsl:variable name="DefColName2" select="(position()-1) mod 26"/>
								<xsl:variable name="DefColName1" select="(position()-1-$DefColName2) div 26"/>
								<TD align="center">
									<xsl:attribute name="colspan"><xsl:value-of select="./@Subcolumns"/></xsl:attribute>
									<xsl:attribute name="rowspan">
										<xsl:if test="($isXSubcol or $isXAdvancedSubcol) and not($isYSubcol)">2</xsl:if>
									</xsl:attribute>
					 
					<xsl:apply-templates select="ps:Title"/>
									<xsl:if test="count(ps:Title)=0 or ps:Title=''">
										<xsl:value-of select="'Data Set-'"/>
										<xsl:if test="$DefColName1 &gt; 0">
											<xsl:value-of select="substring($Chars,$DefColName1,1)"/>
										</xsl:if>
										<xsl:value-of select="substring($Chars,$DefColName2+1,1)"/>
									</xsl:if>
					 				
	   			</TD>
							</xsl:for-each>
						</TR>
						<xsl:if test="$isXSubcol or $isXAdvancedSubcol or $isYSubcol">
							<TR>
								<xsl:if test="$isXSubcol">
									<xsl:for-each select="ps:XColumn">
										<xsl:for-each select="ps:Subcolumn">
											<TD align="center"> 
					 
					<xsl:apply-templates select="ps:Title"/>
												<xsl:if test="count(ps:Title)=0 or ps:Title=''">
													<xsl:choose>
														<xsl:when test="position()=1"><B>X</B></xsl:when>
														<xsl:when test="position()=2"><B>Err.Bar</B></xsl:when>
													</xsl:choose>
												</xsl:if>				
					 
				</TD>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:if>
								<xsl:if test="$isXAdvancedSubcol">
									<xsl:for-each select="ps:XAdvancedColumn">
										<xsl:for-each select="ps:Subcolumn">
											<TD align="center"> 
					 
					<xsl:apply-templates select="ps:Title"/>
												<xsl:if test="count(ps:Title)=0 or ps:Title=''">
													<xsl:choose>
														<xsl:when test="position()=1"><B>Starting Date</B></xsl:when>
														<xsl:when test="position()=2"><B>Ending Date</B></xsl:when>
													</xsl:choose>
												</xsl:if>				
					 
				</TD>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:if>
								<xsl:if test="$isYSubcol">
									<xsl:for-each select="ps:YColumn">
										<xsl:variable name="DefColName2" select="(position()-1) mod 26"/>
										<xsl:variable name="DefColName1" select="(position()-1-$DefColName2) div 26"/>
										<xsl:variable name="YColumnNdx" select="position()"/>
										<xsl:for-each select="ps:Subcolumn">
											<TD align="center">
					 
					<xsl:apply-templates select="ps:Title"/>
												<xsl:if test="count(ps:Title)=0 or ps:Title=''">
													<xsl:if test="$yFormat='replicates' or $yFormat='text'">
														<B>
															<xsl:if test="$DefColName1 &gt; 0">
																<xsl:value-of select="substring($Chars,$DefColName1,1)"/>
															</xsl:if>
															<xsl:choose>
																<xsl:when test="$isYSubColNameCustom">
																	<xsl:variable name="subColCustomNamePos" select="position()"/>
																	<xsl:for-each select="../../ps:SubColumnTitles/ps:Subcolumn">
																		<xsl:if test="position()=$subColCustomNamePos">
																			<xsl:choose>
																				<xsl:when test="../../ps:SubColumnTitles/@OwnSet='1'">
																					<xsl:variable name="DItemsCount" select="count(./ps:d)"/>
																					<xsl:choose>
																						<xsl:when test="$DItemsCount&lt;$YColumnNdx or ./ps:d[$YColumnNdx]=''">
																							<xsl:value-of select="substring($Chars,$DefColName2+1,1)"/>:Y<xsl:value-of select="position()"/>
																						</xsl:when>
																						<xsl:otherwise>
																							<xsl:apply-templates select="./ps:d[$YColumnNdx]"/>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:when test="../../ps:SubColumnTitles/@OwnSet='0'">
																					<xsl:variable name="DItemsCount" select="count(./ps:d)"/>
																					<xsl:choose>
																						<xsl:when test="$DItemsCount&lt;1 or ./ps:d[1]=''">
																							<xsl:value-of select="substring($Chars,$DefColName2+1,1)"/>:Y<xsl:value-of select="position()"/>
																						</xsl:when>
																						<xsl:otherwise>
																							<xsl:apply-templates select="./ps:d[1]"/>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:apply-templates select="ps:d"/>
																					<xsl:if test="ps:d=''">
																						<xsl:value-of select="substring($Chars,$DefColName2+1,1)"/>:Y<xsl:value-of select="position()"/>
																					</xsl:if>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:if>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:value-of select="substring($Chars,$DefColName2+1,1)"/>:Y<xsl:value-of select="position()"/>
																</xsl:otherwise>
															</xsl:choose>
														</B>
													</xsl:if>
													<xsl:if test="$yFormat!='replicates' and $yFormat!='text'">
														<xsl:if test="not($yFormat='replicates' or $yFormat='text')">
															<xsl:if test="position()=1"><B>Mean</B></xsl:if>
															<xsl:if test="position()!=1">
																<xsl:choose>
																	<xsl:when test="$yFormat='SD'">
																		<B>SD</B>
																	</xsl:when>
																	<xsl:when test="$yFormat='SE'">
																		<B>SEM</B>
																	</xsl:when>
																	<xsl:when test="$yFormat='CV'">
																		<B>%CV</B>
																	</xsl:when>
																	<xsl:when test="$yFormat='SDN'">
																		<xsl:if test="position()=2"><B>SD</B></xsl:if>
																		<xsl:if test="position()=3"><B>N</B></xsl:if>
																	</xsl:when>
																	<xsl:when test="$yFormat='SEN'">
																		<xsl:if test="position()=2"><B>SEM</B></xsl:if>
																		<xsl:if test="position()=3"><B>N</B></xsl:if>
																	</xsl:when>
																	<xsl:when test="$yFormat='CVN'">
																		<xsl:if test="position()=2"><B>%CV</B></xsl:if>
																		<xsl:if test="position()=3"><B>N</B></xsl:if>
																	</xsl:when>
																	<xsl:when test="$yFormat='low-high'">
																		<xsl:if test="position()=2"><B>+Error</B></xsl:if>
																		<xsl:if test="position()=3"><B>-Error</B></xsl:if>
																	</xsl:when>
																	<xsl:when test="$yFormat='upper-lower-limits'">
																		<xsl:if test="position()=2"><B>UpperLimit</B></xsl:if>
																		<xsl:if test="position()=3"><B>LowerLimit</B></xsl:if>
																	</xsl:when>
																</xsl:choose>
															</xsl:if>
														</xsl:if>
													</xsl:if>
												</xsl:if>
					 				
	   			</TD>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:if>
							</TR>
						</xsl:if>
						<TR>
							<xsl:for-each select="ps:RowTitlesColumn/ps:Subcolumn">
								<td valign="top" nowrap="1">
									<xsl:attribute name="width"><xsl:value-of select="$width"/>%</xsl:attribute>
									<xsl:apply-templates select="ps:d"/>
									<xsl:if test="count(ps:d)=0"><br/></xsl:if>
								</td>
							</xsl:for-each>
							<xsl:if test="not($isXAdvancedColumn)">
								<xsl:for-each select="ps:XColumn/ps:Subcolumn">
									<td valign="top" nowrap="1">
										<xsl:attribute name="width"><xsl:value-of select="$width"/>%</xsl:attribute>
										<xsl:apply-templates select="ps:d"/>
										<xsl:if test="count(ps:d)=0"><br/></xsl:if>
									</td>
								</xsl:for-each>
							</xsl:if>
							<xsl:if test="$isXAdvancedColumn">
								<xsl:for-each select="ps:XAdvancedColumn/ps:Subcolumn">
									<td valign="top" nowrap="1">
										<xsl:attribute name="width"><xsl:value-of select="$width"/>%</xsl:attribute>
										<xsl:apply-templates select="ps:d"/>
										<xsl:if test="count(ps:d)=0"><br/></xsl:if>
									</td>
								</xsl:for-each>
							</xsl:if>
							<xsl:for-each select="ps:YColumn/ps:Subcolumn">
								<td valign="top" nowrap="1">
									<xsl:attribute name="width"><xsl:value-of select="$width"/>%</xsl:attribute>
									<xsl:apply-templates select="ps:d"/>
									<xsl:if test="count(ps:d)=0"><br/></xsl:if>
								</td>
							</xsl:for-each>
						</TR>
					</TABLE>
					<br/>
					<xsl:apply-templates select="ps:Info"/>
					<br/>
					<hr/>
					<br/>
				</xsl:for-each>
			</BODY>
		</HTML>
	</xsl:template>
	<!--<xsl:template match="ps:d">
	<xsl:choose>
		<xsl:when test="@Excluded and string-length(text())" >
		    <font color="#0000ee">
	      		<xsl:apply-templates select="node()"/>*		
		    </font>
		</xsl:when>
	    <xsl:otherwise>
			<xsl:apply-templates select="node()"/>
		</xsl:otherwise>
	</xsl:choose>
	<xsl:if test="position()!=last()"><br/></xsl:if>
</xsl:template>-->
	<xsl:template match="ps:d">
		<xsl:choose>
			<xsl:when test="@Excluded and string-length(text())">
				<xsl:choose>
					<xsl:when test="../../../@EVFormat='AsteriskAfterNumber'">
						<font color="#0000ee">
							<xsl:apply-templates select="node()"/>*
						</font>
					</xsl:when>
					<xsl:when test="../../../@EVFormat='Blank'">
					</xsl:when>
					<xsl:otherwise>
						<xsl:apply-templates select="node()"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:apply-templates select="node()"/>
			</xsl:otherwise>
		</xsl:choose>
		<xsl:if test="position()!=last()"><br/></xsl:if>
	</xsl:template>
	<xsl:template match="ps:Title">
		<b><xsl:apply-templates select="node()"/></b>
	</xsl:template>
	<xsl:template match="node()">
		<xsl:param name="DoNotUseBR" select="0"/>
		<xsl:choose>
			<xsl:when test="name()='BR' and $DoNotUseBR=1">
				<div/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy>
					<xsl:apply-templates select="node()">
						<xsl:with-param name="DoNotUseBR" select="$DoNotUseBR"/>
					</xsl:apply-templates>
				</xsl:copy>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ps:Font">
		<xsl:param name="DoNotUseBR" select="0"/>
		<font>
			<xsl:if test="@Size">
				<xsl:attribute name="STYLE">font-size:<xsl:value-of select="@Size"/>pt</xsl:attribute>
			</xsl:if>
			<xsl:copy-of select="@*"/>
			<xsl:apply-templates select="node()">
				<xsl:with-param name="DoNotUseBR" select="$DoNotUseBR"/>
			</xsl:apply-templates>
		</font>
	</xsl:template>
	<xsl:template match="ps:LineStyles">
		<div>
			<xsl:if test="@align">
				<xsl:attribute name="align"><xsl:value-of select="@align"/></xsl:attribute>
			</xsl:if>
			<xsl:if test="@spacing">
				<xsl:variable name="sp" select="@spacing"/>
				<xsl:attribute name="style">margin-bottom:<xsl:value-of select="(@spacing -100) div 5"/>pt</xsl:attribute>
			</xsl:if>
			<xsl:apply-templates select="node()">
				<xsl:with-param name="DoNotUseBR" select="1"/>
			</xsl:apply-templates>
		</div>
	</xsl:template>
	<xsl:template match="ps:Notes">
		<xsl:apply-templates select="node()">
			<xsl:with-param name="DoNotUseBR" select="1"/>
		</xsl:apply-templates>
	</xsl:template>
	<xsl:template match="/">
		<HTML>
			<BODY>
				<xsl:apply-templates select="//ps:GraphPadPrismFile"/>
			</BODY>
		</HTML>
	</xsl:template>
</xsl:stylesheet>
